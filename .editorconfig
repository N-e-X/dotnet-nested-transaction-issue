# top-most EditorConfig file
root = true

# All files
[*]
charset = utf-8
indent_style = space
end_of_line = crlf
trim_trailing_whitespace = true
insert_final_newline = false
# (Please don't specify an indent_size here; that has too many unintended consequences.)

[*.{json,xml,config,*proj,nuspec,props,resx,targets,yml,tasks,ruleset,runsettings}]
indent_size = 2
tab_width = 2

[*.cs]
indent_size = 4
tab_width = 4

###############################
# .NET Coding Conventions     #
###############################

# Organize using directives
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:error

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# Other
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:error
dotnet_style_prefer_simplified_interpolation = true:error
dotnet_code_quality_unused_parameters = all:error
dotnet_style_prefer_collection_expression = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion

# Code analysis

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = suggestion

# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# IDE0044: Make field readonly
dotnet_diagnostic.IDE0044.severity = warning

# IDE0270: Null check can be simplified
dotnet_diagnostic.IDE0270.severity = refactoring

# Specify CultureInfo
dotnet_diagnostic.CA1304.severity = suggestion

# Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = warning

# Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = error

# Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = error

# Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = error

# The variable is declared but never used
dotnet_diagnostic.CS0168.severity = error

# Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = none

# This async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = error

# Converting null literal or possible null value to non-nullable type
dotnet_diagnostic.CS8603.severity = error # только для проектов с nullable reference types

# Non-nullable field is uninitialized
dotnet_diagnostic.CS8618.severity = error # только для проектов с nullable reference types

# CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = warning

# Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

# RCS1090: Add call to 'ConfigureAwait' (or vice versa).
dotnet_diagnostic.RCS1090.severity = none

# RCS1155: Use StringComparison when comparing strings.
dotnet_diagnostic.RCS1155.severity = none

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = warning

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = suggestion

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1854: Prefer the IDictionary.TryGetValue(TKey, out TValue) method
dotnet_diagnostic.CA1854.severity = warning

###############################
# Naming Conventions          #
###############################

# Naming styles

## pascal_case_style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case 

## camel_case_style
dotnet_naming_style.camel_case_style.capitalization = camel_case

## underscore_with_camel_case_style
dotnet_naming_style.underscore_with_camel_case_style.required_prefix = _
dotnet_naming_style.underscore_with_camel_case_style.capitalization = camel_case

## prefix_i_with_pascal_case_style
dotnet_naming_style.prefix_i_with_pascal_case_style.required_prefix = I
dotnet_naming_style.prefix_i_with_pascal_case_style.capitalization = pascal_case

## prefix_base_with_pascal_case_style
dotnet_naming_style.prefix_base_with_pascal_case_style.required_prefix = Base
dotnet_naming_style.prefix_base_with_pascal_case_style.capitalization = pascal_case

# Private and protected fields start with _ and are camelCase
dotnet_naming_rule.private_and_protected_fields_start_with_underscore_and_are_camel_case.severity = warning
dotnet_naming_rule.private_and_protected_fields_start_with_underscore_and_are_camel_case.symbols = private_and_protected_fields
dotnet_naming_rule.private_and_protected_fields_start_with_underscore_and_are_camel_case.style = underscore_with_camel_case_style

dotnet_naming_symbols.private_and_protected_fields.applicable_kinds = field
dotnet_naming_symbols.private_and_protected_fields.applicable_accessibilities = private, protected, private_protected

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

# Interfaces start with 'I' and are Pascal Case
dotnet_naming_rule.interfaces_start_with_i_and_are_pascal_case.severity = warning
dotnet_naming_rule.interfaces_start_with_i_and_are_pascal_case.symbols = interfaces
dotnet_naming_rule.interfaces_start_with_i_and_are_pascal_case.style = prefix_i_with_pascal_case_style

dotnet_naming_symbols.interfaces.applicable_kinds = interface

# Abstract classes start with 'Base' and are Pascal Case
dotnet_naming_rule.abstract_classes_start_with_base_and_are_pascal_case.severity = warning
dotnet_naming_rule.abstract_classes_start_with_base_and_are_pascal_case.symbols = abstract_classes
dotnet_naming_rule.abstract_classes_start_with_base_and_are_pascal_case.style = prefix_base_with_pascal_case_style

dotnet_naming_symbols.abstract_classes.applicable_kinds = class
dotnet_naming_symbols.abstract_classes.required_modifiers = abstract

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

###############################
# C# Coding Conventions       #
###############################

# var preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_operators = true:suggestion # when_on_single_line
csharp_style_expression_bodied_indexers = true:suggestion # when_on_single_line
csharp_style_expression_bodied_methods = true:silent # when_on_single_line
csharp_style_expression_bodied_constructors = true:silent # when_on_single_line
csharp_style_expression_bodied_properties = true:suggestion # when_on_single_line
csharp_style_expression_bodied_accessors = true:suggestion # when_on_single_line
csharp_style_expression_bodied_lambdas = true:silent # when_on_single_line
csharp_style_expression_bodied_local_functions = true:suggestion # when_on_single_line

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent# when_multiline
csharp_style_deconstructed_variable_declaration = false
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_braces = false
csharp_indent_block_contents = true
csharp_indent_case_contents_when_block = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_square_brackets = false
csharp_space_around_declaration_statements = false

# Wrapping preferences
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Other
csharp_using_directive_placement = outside_namespace:suggestion
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_prefer_static_local_function = true:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = false:error
csharp_style_prefer_null_check_over_type_check = true:suggestion
